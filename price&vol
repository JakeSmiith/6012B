# ────────────────────────────────────────────────────────────────────────────
# R Script: Pull daily PX_LAST & VOLUME for IONQ/QBTS/RGTI/CCMP/RTY →
# Excel with one sheet per ticker including volume
# ────────────────────────────────────────────────────────────────────────────

# 1) Install (once) and load
# install.packages(c("Rblpapi","openxlsx","xts"))
library(Rblpapi)
library(openxlsx)
library(xts)

# 2) Define each dataset: ticker + fields (now including VOLUME for indices)
datasets <- list(
    IONQ = list(tkr = "IONQ US Equity", fields = c("PX_LAST", "VOLUME")),
    QBTS = list(tkr = "QBTS US Equity", fields = c("PX_LAST", "VOLUME")),
    RGTI = list(tkr = "RGTI US Equity", fields = c("PX_LAST", "VOLUME")),
    CCMP = list(tkr = "CCMP Index",    fields = c("PX_LAST", "VOLUME")),
    RTY  = list(tkr = "RTY Index",     fields = c("PX_LAST", "VOLUME"))
)

# 3) Set the 1-year date window
start_date <- Sys.Date() - 365
end_date   <- Sys.Date()

# 4) Connect to Bloomberg
blpConnect()

# 5) Prepare new Excel workbook
wb <- createWorkbook()

# 6) Loop: fetch, coerce, clean, and write each sheet
for(name in names(datasets)) {
    spec <- datasets[[name]]
    
    # 6a) Fetch PX_LAST & VOLUME
    raw <- suppressWarnings(
        bdh(
            securities = spec$tkr,
            fields     = spec$fields,
            start.date = start_date,
            end.date   = end_date
        )
    )
    
    # 6b) Coerce to data.frame with Date column
    if (inherits(raw, "xts")) {
        df <- data.frame(
            Date = as.Date(index(raw)),
            coredata(raw),
            check.names = FALSE,
            row.names   = NULL
        )
    } else {
        df <- as.data.frame(raw, stringsAsFactors = FALSE)
        if ("Date" %in% names(df)) {
            df$Date <- as.Date(substr(as.character(df$Date),1,10), "%Y-%m-%d")
        } else {
            dates <- substr(rownames(raw),1,10)
            df$Date <- as.Date(dates, "%Y-%m-%d")
        }
        df <- df[, c("Date", setdiff(names(df), "Date"))]
    }
    
    # 6c) Rename columns: PX_LAST → Last, VOLUME → Vol
    names(df) <- sub("^PX_LAST.*", "Last",  names(df))
    names(df) <- sub("^VOLUME.*",    "Vol",   names(df))
    
    # 6d) Add worksheet and write
    addWorksheet(wb, name)
    writeData(wb, name, df)
}

# 7) Determine Downloads folder (network home), fallback to getwd()
downloads_dir <- path.expand("~/Downloads")
if (!dir.exists(downloads_dir)) downloads_dir <- getwd()

# 8) Save workbook
out_file <- file.path(downloads_dir, "quantum_and_index_volumes.xlsx")
saveWorkbook(wb, out_file, overwrite = TRUE)

# 9) Confirmation
message(
    "✅ Created sheets: ", paste(names(datasets), collapse = ", "),
    "\n   Saved to: ", out_file
)
