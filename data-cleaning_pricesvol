install.packages(c("readxl","dplyr","lubridate","zoo","purrr","timeDate"))  #run if needed

library(readxl)
library(dplyr)
library(lubridate)
library(zoo)
library(purrr)
library(timeDate)

#locate file
file_path <- "C:/Users/jakes/Downloads/quantum_and_index_volumes.xlsx"

# get all sheet names
sheets <- excel_sheets(file_path)

# function to process each sheet with robust column detection
process_sheet <- function(sheet_name) {
    raw <- read_excel(file_path, sheet = sheet_name)
    
    # drop any columns that are entirely NA
    df <- raw %>% select(where(~ !all(is.na(.))))
    
    # detect key columns by name pattern
    date_col   <- names(df)[grepl("^date$",       names(df), ignore.case = TRUE)][1]
    volume_col <- names(df)[grepl("vol",          names(df), ignore.case = TRUE)][1]
    price_col  <- names(df)[grepl("price|last|close", names(df), ignore.case = TRUE)][1]
    
    # sanity check
    if (is.na(date_col) || is.na(volume_col)) {
        stop(sprintf(
            "Sheet '%s': cannot find date or volume column. Found: %s",
            sheet_name,
            paste(names(df), collapse = ", ")
        ))
    }
    
    # rename to standard names
    df <- df %>%
        rename(
            date   = all_of(date_col),
            volume = all_of(volume_col),
            # price is optional
            price  = all_of(price_col)
        )
    
    # parse and clean
    df <- df %>%
        mutate(date = as_date(date)) %>%
        arrange(date) %>%
        distinct(date, .keep_all = TRUE)
    
    # build NYSE trading‚Äêday sequence
    yrs           <- unique(year(df$date))
    nyse_holidays <- as_date(holidayNYSE(year = yrs))
    all_days      <- seq(min(df$date), max(df$date), by = "day")
    weekdays_only <- all_days[!wday(all_days) %in% c(1, 7)]     # drop weekends
    trading_days  <- setdiff(weekdays_only, nyse_holidays)
    
    missing <- setdiff(trading_days, df$date)
    if (length(missing) > 0) {
        message(sprintf(
            "Sheet '%s' has %d missing trading day(s) between %s and %s. Examples: %s",
            sheet_name,
            length(missing),
            min(df$date), max(df$date),
            paste(head(missing, 5), collapse = ", ")
        ))
    }
    
    # compute rolling volume metrics
    df <- df %>%
        mutate(
            roll_vol_mean = rollapply(volume, 60, mean, align = "right", fill = NA),
            roll_vol_sd   = rollapply(volume, 60, sd,   align = "right", fill = NA),
            volume_spike  = (volume - roll_vol_mean) / roll_vol_mean
        )
    
    # compute realised volatility if price is present
    if ("price" %in% names(df)) {
        df <- df %>%
            arrange(date) %>%
            mutate(
                ret             = log(price / lag(price)),
                roll_volatility = rollapply(ret, 20, sd, align = "right", fill = NA)
            )
    }
    
    return(df)
}

#apply to all sheets, store in a named list
results <- map(sheets, process_sheet) %>% set_names(sheets)

#checks
print(head(results[[1]]))
